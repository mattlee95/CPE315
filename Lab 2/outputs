=========Part 1==========
1a. a=0x0001, b=0x0001 c=0x00000001
1b. a=0x0001, b=0xFFFF c=0x0000FFFF
1c. a=0x8000, b=0x0001 c=0x00008000
1d. a=0x4000, b=0x4000 c=0x10000000
1e. a=0x8000, b=0x8000 c=0x40000000
=========================
=========Part 2==========
2a. Test case: 0x40C80000
 Float: 6.250000
 Exponent:*
 Fraction:0x********
2b. Test case: 0xc3000000
 Float: -2.000000
 Exponent:*
 Fraction:0x********
2c. Test case: 0x3e000000
 Float: 0.125000
 Exponent:*
 Fraction:0x********
2d. Test case: 0x3EAAAAAB
 Float: 0.333333
 Exponent:*
 Fraction:0x********
=========================
=========Part 3==========
3a. Test case: 0x40C80000
 Float:*
3b. Test case: 0xC3000000
 Float:*
3c. Test case: 0x3E000000
 Float:*
3d. Test case: 0x3EAAAAAB
 Float:*
=========================
=========Part 4==========
4a. Exp = 1, Frac = 0x4000000
4b. Exp = -9, Frac = 0x********
4c. Exp = 3, Frac = 0x********
4d. Exp = -13, Frac = 0x******** 
CPE 315 Rev W2017.1, Lab Assignment 2 –Binary Multiply and IEEE 754 Floating Point Operation Page 11
=========================
=========Part 5==========
5a. 0xBF800000 and 0x3F800000 (-1 and +1)
 Sum:0x******** (* Decimal Value)
5b. 0x3F800000 and 0x3E800000 (1 + .25)
 Sum:0x******** (*)
5c. 0x40800000 and 0xBE000000 (4.0 + (-.125) )
 Sum:0x******** (*)
=========================
=========Part 6==========
6a. 0x40400000 and 0x3F800000 (3 – 1)
 Diff:0x******** (* Decimal Value)
6b. 0x40400000 and 0xBF800000 (3 – (-1) )
 Diff:0x******** (*)
6c. 0x40000000 and 0x40000000
 Diff:0x******** (*)
=========================
=========Part 7==========
7a. 0x40200000 and 0x40200000 (2.5 x 2.5)
 Product:0x******** (* Decimal Value)
7b. 0xc1700000 and 0x45800000 (-15 x 4096)
 Product:0x******** (*)
========================= 
